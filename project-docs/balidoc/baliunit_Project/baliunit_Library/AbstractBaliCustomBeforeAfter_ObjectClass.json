{"classname":"AbstractBaliCustomBeforeAfter","comment":"Class for custom beforeAll, beforeEach, afterEach and afterAll code.\nbeforeAll is automatically run during BaliTestSuite.isStarted() function.\nbeforeEach is automatically run by core BaliTestSuite assertions, but must be manually run in custom assertion tests.\nafterEach is automatically run by core BaliTestSuite assertions, but must be run manually in custom assertion tests.\nafterAll is automatically run during BaliTestSuite.delete() function, at the end of the scope for the BaliTestSuite.","filenamebase":"AbstractBaliCustomBeforeAfter_ObjectClass","fqnprefix":"baliunit.baliunit","fqn":"baliunit.baliunit.AbstractBaliCustomBeforeAfter","codesample":"","signaturecode":128,"instancecode":128,"classtype":"Base","projectid":"48B1E34403B8B6D480258934005548BC","version":3,"classid":"CE53564B6D5B5C7A8025893400572CF2","lsxclassid":4,"signature":"Class AbstractBaliCustomBeforeAfter","modifiers":"","classname":"AbstractBaliCustomBeforeAfter","parentclass":"None","constructorsignature":"Function New() As AbstractBaliCustomBeforeAfter","codesamplehtml":"","commenthtml":"Class for custom beforeAll, beforeEach, afterEach and afterAll code.&amp;lt;br /&amp;gt;beforeAll is automatically run during BaliTestSuite.isStarted() function.&amp;lt;br /&amp;gt;beforeEach is automatically run by core BaliTestSuite assertions, but must be manually run in custom assertion tests.&amp;lt;br /&amp;gt;afterEach is automatically run by core BaliTestSuite assertions, but must be run manually in custom assertion tests.&amp;lt;br /&amp;gt;afterAll is automatically run during BaliTestSuite.delete() function, at the end of the scope for the BaliTestSuite.", "methods":[{"label":"New","comment":"","valuetype":"AbstractBaliCustomBeforeAfter","filenamebase":"New_Method","fqnprefix":"baliunit.baliunit.AbstractBaliCustomBeforeAfter","fqn":"baliunit.baliunit.AbstractBaliCustomBeforeAfter.New","codesample":"","signaturecode":8,"instancecode":8,"signature":"Function New() As AbstractBaliCustomBeforeAfter","modifiers":"","codesamplehtml":"","commenthtml":"", "signatureelements":["Function"]},{"label":"beforeEach","comment":"Code to run before each assertion.","filenamebase":"beforeEach_Method","fqnprefix":"baliunit.baliunit.AbstractBaliCustomBeforeAfter","fqn":"baliunit.baliunit.AbstractBaliCustomBeforeAfter.beforeEach","codesample":"Private a as Integer\nPrivate b as Integer\n \nClass IntegerIncrementBeforeAfter As AbstractBaliCustomBeforeAfter\n    \n    Sub beforeAll()\n        a = 0\n        b = 0\n    End Sub\n    \n    Sub beforeEach()\n        a++\n    End Sub\n    \n    Sub afterEach()\n        b++\n    End Sub\n    \n    Sub afterAll()\n        Print |a is | &amp; a &amp; |, b is | &amp; b\n    End Sub\nEnd Class","signaturecode":4,"instancecode":4,"signature":"Sub beforeEach()","modifiers":"","codesamplehtml":"Private a as Integer&amp;lt;br /&amp;gt;Private b as Integer&amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;Class IntegerIncrementBeforeAfter As AbstractBaliCustomBeforeAfter&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeAll()&amp;lt;br /&amp;gt;        a = 0&amp;lt;br /&amp;gt;        b = 0&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeEach()&amp;lt;br /&amp;gt;        a++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterEach()&amp;lt;br /&amp;gt;        b++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterAll()&amp;lt;br /&amp;gt;        Print |a is | &amp; a &amp; |, b is | &amp; b&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;End Class","commenthtml":"Code to run before each assertion.", "signatureelements":["Sub"]},{"label":"beforeAll","comment":"Code to run before any assertion starts.","filenamebase":"beforeAll_Method","fqnprefix":"baliunit.baliunit.AbstractBaliCustomBeforeAfter","fqn":"baliunit.baliunit.AbstractBaliCustomBeforeAfter.beforeAll","codesample":"Private a as Integer\nPrivate b as Integer\n \nClass IntegerIncrementBeforeAfter As AbstractBaliCustomBeforeAfter\n    \n    Sub beforeAll()\n        a = 0\n        b = 0\n    End Sub\n    \n    Sub beforeEach()\n        a++\n    End Sub\n    \n    Sub afterEach()\n        b++\n    End Sub\n    \n    Sub afterAll()\n        Print |a is | &amp; a &amp; |, b is | &amp; b\n    End Sub\nEnd Class","signaturecode":4,"instancecode":4,"signature":"Sub beforeAll()","modifiers":"","codesamplehtml":"Private a as Integer&amp;lt;br /&amp;gt;Private b as Integer&amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;Class IntegerIncrementBeforeAfter As AbstractBaliCustomBeforeAfter&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeAll()&amp;lt;br /&amp;gt;        a = 0&amp;lt;br /&amp;gt;        b = 0&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeEach()&amp;lt;br /&amp;gt;        a++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterEach()&amp;lt;br /&amp;gt;        b++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterAll()&amp;lt;br /&amp;gt;        Print |a is | &amp; a &amp; |, b is | &amp; b&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;End Class","commenthtml":"Code to run before any assertion starts.", "signatureelements":["Sub"]},{"label":"afterEach","comment":"Code to run after each assertion is completed.","filenamebase":"afterEach_Method","fqnprefix":"baliunit.baliunit.AbstractBaliCustomBeforeAfter","fqn":"baliunit.baliunit.AbstractBaliCustomBeforeAfter.afterEach","codesample":"Private a as Integer\nPrivate b as Integer\n \nClass IntegerIncrementBeforeAfter As AbstractBaliCustomBeforeAfter\n    \n    Sub beforeAll()\n        a = 0\n        b = 0\n    End Sub\n    \n    Sub beforeEach()\n        a++\n    End Sub\n    \n    Sub afterEach()\n        b++\n    End Sub\n    \n    Sub afterAll()\n        Print |a is | &amp; a &amp; |, b is | &amp; b\n    End Sub\nEnd Class","signaturecode":4,"instancecode":4,"signature":"Sub afterEach()","modifiers":"","codesamplehtml":"Private a as Integer&amp;lt;br /&amp;gt;Private b as Integer&amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;Class IntegerIncrementBeforeAfter As AbstractBaliCustomBeforeAfter&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeAll()&amp;lt;br /&amp;gt;        a = 0&amp;lt;br /&amp;gt;        b = 0&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeEach()&amp;lt;br /&amp;gt;        a++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterEach()&amp;lt;br /&amp;gt;        b++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterAll()&amp;lt;br /&amp;gt;        Print |a is | &amp; a &amp; |, b is | &amp; b&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;End Class","commenthtml":"Code to run after each assertion is completed.", "signatureelements":["Sub"]},{"label":"afterAll","comment":"Code to run after all assertions have been completed.","filenamebase":"afterAll_Method","fqnprefix":"baliunit.baliunit.AbstractBaliCustomBeforeAfter","fqn":"baliunit.baliunit.AbstractBaliCustomBeforeAfter.afterAll","codesample":"Private a as Integer\nPrivate b as Integer\n \nClass IntegerIncrementBeforeAfter As AbstractBaliCustomBeforeAfter\n    \n    Sub beforeAll()\n        a = 0\n        b = 0\n    End Sub\n    \n    Sub beforeEach()\n        a++\n    End Sub\n    \n    Sub afterEach()\n        b++\n    End Sub\n    \n    Sub afterAll()\n        Print |a is | &amp; a &amp; |, b is | &amp; b\n    End Sub\nEnd Class","signaturecode":4,"instancecode":4,"signature":"Sub afterAll()","modifiers":"","codesamplehtml":"Private a as Integer&amp;lt;br /&amp;gt;Private b as Integer&amp;lt;br /&amp;gt; &amp;lt;br /&amp;gt;Class IntegerIncrementBeforeAfter As AbstractBaliCustomBeforeAfter&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeAll()&amp;lt;br /&amp;gt;        a = 0&amp;lt;br /&amp;gt;        b = 0&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub beforeEach()&amp;lt;br /&amp;gt;        a++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterEach()&amp;lt;br /&amp;gt;        b++&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;    &amp;lt;br /&amp;gt;    Sub afterAll()&amp;lt;br /&amp;gt;        Print |a is | &amp; a &amp; |, b is | &amp; b&amp;lt;br /&amp;gt;    End Sub&amp;lt;br /&amp;gt;End Class","commenthtml":"Code to run after all assertions have been completed.", "signatureelements":["Sub"]}]}
